CREATE TABLE STRADA(
    id_strada NUMBER(3) PRIMARY KEY,
    nume_strada VARCHAR(100) NOT NULL
    );
    
CREATE TABLE INSTITUTIE_INVATAMANT (
    id_forma NUMBER(3) PRIMARY KEY,
    nume VARCHAR(50) NOT NULL,
    tip_forma_invatamant CHAR(40) NOT NULL,
    id_strada REFERENCES STRADA
    );

CREATE TABLE CASA (
    id_strada REFERENCES STRADA,
    numar NUMBER(3) NOT NULL CHECK (numar > 0 AND numar < 50),
    camere NUMBER(2) DEFAULT 1 NOT NULL,
    dimensiune NUMBER(4) NOT NULL,
    PRIMARY KEY(id_strada, numar)
    );

CREATE TABLE PRIMARIE (
    id_primarie NUMBER(3) PRIMARY KEY,
    nume VARCHAR(100) NOT NULL,
    id_strada REFERENCES STRADA,
    CONSTRAINT primarie_locatie_unic UNIQUE (id_strada)
    );

CREATE TABLE FAMILIE(
    id_familie NUMBER(4) PRIMARY KEY,
    id_primarie REFERENCES PRIMARIE,
    nume_familie VARCHAR(25) NOT NULL
    );

CREATE TABLE LOCUITOR (
    id_locuitor NUMBER(5) PRIMARY KEY,
    id_familie NUMBER(4) REFERENCES FAMILIE(id_familie),
    prenume VARCHAR(50) NOT NULL,
    sex NUMBER(1) CHECK (sex > 0 AND sex < 3)
    );

CREATE TABLE FIRMA_ORGANIZARE(
    id_firma NUMBER(3) PRIMARY KEY,
    nume VARCHAR(100) NOT NULL
    );
    
CREATE TABLE EVENIMENT_CULTURAL(
    id_eveniment NUMBER(3) PRIMARY KEY, 
    id_firma REFERENCES FIRMA_ORGANIZARE,
    nume_eveniment VARCHAR(25) NOT NULL,
    capacitate NUMBER(7) NOT NULL
    );

CREATE TABLE CUMPARATOR(
    id_cumparator NUMBER(3) PRIMARY KEY,
    nume VARCHAR(100) NOT NULL
    );

CREATE TABLE CICLU_INVATAMANT(
    id_forma REFERENCES INSTITUTIE_INVATAMANT,
    id_locuitor REFERENCES locuitor,
    an_invatamant DATE NOT NULL,
    PRIMARY KEY (id_forma, id_locuitor, an_invatamant)
    );
    
CREATE TABLE CONTRACT_CUMPARARE(
    id_primarie REFERENCES PRIMARIE,
    id_cumparator REFERENCES CUMPARATOR,
    id_familie REFERENCES FAMILIE,
    data_cumparare DATE NOT NULL,
    taxa NUMBER(3) DEFAULT NULL,
    suma NUMBER(8) NOT NULL,
    PRIMARY KEY (id_primarie, id_cumparator, id_familie, data_cumparare)
    );

CREATE TABLE FAMILIE_CASA(
    id_familie NUMBER(4) NOT NULL,
    id_strada NUMBER(3),
    numar NUMBER(3),
    data_mutare DATE NOT NULL,
    PRIMARY KEY (id_familie, id_strada, numar, data_mutare),
    FOREIGN KEY (id_strada, numar) REFERENCES CASA(id_strada, numar),
    FOREIGN KEY (id_familie) REFERENCES FAMILIE(id_familie)
    );

CREATE TABLE PRIMARIE_EVENIMENT(
    id_primarie REFERENCES PRIMARIE,
    id_eveniment REFERENCES EVENIMENT_CULTURAL,
    data_eveniment DATE NOT NULL,
    PRIMARY KEY(id_primarie, id_eveniment, data_eveniment)
    );

DROP TABLE CONTRACT_CUMPARARE;
DROP TABLE CUMPARATOR;
DROP TABLE PRIMARIE_EVENIMENT;
DROP TABLE EVENIMENT_CULTURAL;
DROP TABLE FIRMA_ORGANIZARE;
DROP TABLE CICLU_INVATAMANT;
DROP TABLE INSTITUTIE_INVATAMANT;
DROP TABLE LOCUITOR;
DROP TABLE FAMILIE_CASA;
DROP TABLE FAMILIE;
DROP TABLE CASA;
DROP TABLE PRIMARIE;
DROP TABLE STRADA;

DROP SEQUENCE strada_seq;
CREATE SEQUENCE strada_seq
START with 1
INCREMENT BY 5
NOCACHE;
INSERT INTO STRADA
VALUES(strada_seq.nextval, 'Teilor');
INSERT INTO STRADA
VALUES(strada_seq.nextval1, 'Libertatii');
INSERT INTO STRADA
VALUES(strada_seq.nextval, 'Viilor');
INSERT INTO STRADA
VALUES(strada_seq.nextval, 'Crinului');
INSERT INTO STRADA
VALUES(strada_seq.nextval, 'Tineretului');
INSERT INTO STRADA
VALUES(strada_seq.nextval, 'Eroilor');
INSERT INTO STRADA
VALUES(strada_seq.nextval, 'Singuratatii');

INSERT INTO CASA
VALUES(1, 1, 5, 420);
INSERT INTO CASA
VALUES(11, 2, 2, 210);
INSERT INTO CASA
VALUES(16, 14, 1, 100);
INSERT INTO CASA
VALUES(21, 4, 3, 250);
INSERT INTO CASA
VALUES(21, 5, 2, 260);
INSERT INTO CASA
VALUES(16, 25, 3, 420);

describe casa;
INSERT INTO PRIMARIE
VALUES(1, 'Primaria Viilor', 6);
INSERT INTO PRIMARIE
VALUES(2, 'Primaria Tineretului', 16);
INSERT INTO PRIMARIE
VALUES(3, 'Primaria Crinului', 11);
INSERT INTO PRIMARIE
VALUES(4, 'Primaria Eroilor', 21);
INSERT INTO PRIMARIE
VALUES(5, 'Primaria Teilor', 1);
INSERT INTO PRIMARIE
VALUES(6, 'Primaria Degeaba', 26);


INSERT INTO FAMILIE
VALUES(5, 4, 'Popescu');
INSERT INTO FAMILIE
VALUES(10, 1, 'Ionescu');
INSERT INTO FAMILIE
VALUES(15, 1, ' Popa');
INSERT INTO FAMILIE
VALUES(20, 4, 'Constantinescu');
INSERT INTO FAMILIE
VALUES(25, 5, 'Tupeiescu');
INSERT INTO FAMILIE
VALUES(30, 2, 'Vecinescu');

INSERT INTO LOCUITOR 
VALUES (1, 5, 'Ion', 1);
INSERT INTO LOCUITOR
VALUES (2, 5,'Maria', 2);
INSERT INTO LOCUITOR
VALUES (3, 5, 'Ana', 2);
INSERT INTO LOCUITOR
VALUES (4, 20, 'Mihai', 1);
INSERT INTO LOCUITOR
VALUES (5, 20, 'Elena', 2);
INSERT INTO LOCUITOR
VALUES(6, 25, 'Costache', 1);
INSERT INTO LOCUITOR
VALUES(7, 25, 'Mihaela', 2);
INSERT INTO LOCUITOR
VALUES(8, 30, 'Ramon', 1);


INSERT INTO INSTITUTIE_INVATAMANT
VALUES (1, 'Scoala Gimnaziala Nr. 1', 'Scoala Gimnaziala', 1);
INSERT INTO INSTITUTIE_INVATAMANT
VALUES (2, 'Liceul Teoretic "Mihai Eminescu"', 'Liceu', 1);
INSERT INTO INSTITUTIE_INVATAMANT
VALUES (3, 'Scoala Gimnaziala Nr. 2', 'Scoala Gimnaziala', 6);
INSERT INTO INSTITUTIE_INVATAMANT
VALUES (4, 'Colegiul National "Gheorghe Lazar"', 'Colegiu', 16);
INSERT INTO INSTITUTIE_INVATAMANT
VALUES (5, 'Liceul Tehnic', 'Liceu', 21);

INSERT INTO CUMPARATOR
VALUES (1, 'ABC Company');
INSERT INTO CUMPARATOR
VALUES (2, 'XYZ Corporation');
INSERT INTO CUMPARATOR
VALUES (3, '123 Industries');
INSERT INTO CUMPARATOR
VALUES (4, 'Acme Enterprises');
INSERT INTO CUMPARATOR
VALUES (5, 'Global Solutions');

INSERT INTO FIRMA_ORGANIZARE
VALUES (1, 'Event Management Company');
INSERT INTO FIRMA_ORGANIZARE
VALUES (2, 'Art Agency');
INSERT INTO FIRMA_ORGANIZARE
VALUES (3, 'Production House');
INSERT INTO FIRMA_ORGANIZARE
VALUES (4, 'Entertainment Solutions');
INSERT INTO FIRMA_ORGANIZARE
VALUES (5, 'Creative Events');

INSERT INTO EVENIMENT_CULTURAL
VALUES (1, 1, 'Concert Live', 1000);
INSERT INTO EVENIMENT_CULTURAL
VALUES (2, 5, 'Expozitie de arta', 500);
INSERT INTO EVENIMENT_CULTURAL
VALUES (3, 5, 'Teatru in aer liber', 300);
INSERT INTO EVENIMENT_CULTURAL
VALUES (4, 1, 'Dans contemporan', 800);
INSERT INTO EVENIMENT_CULTURAL
VALUES (5, 4, 'Film in aer liber', 200);

INSERT INTO CICLU_INVATAMANT
VALUES(1, 1, '15-sep-1985');
INSERT INTO CICLU_INVATAMANT
VALUES(5, 1, '20-sep-1993');
INSERT INTO CICLU_INVATAMANT
VALUES(3, 2, '15-sep-1985');
INSERT INTO CICLU_INVATAMANT
VALUES(4, 2, '20-sep-1993');
INSERT INTO CICLU_INVATAMANT
VALUES(3, 3, '29-aug-2003');
INSERT INTO CICLU_INVATAMANT
VALUES(4, 3, '30-sep-2011');
INSERT INTO CICLU_INVATAMANT
VALUES(1, 4, '29-aug-2003');
INSERT INTO CICLU_INVATAMANT
VALUES(4, 4, '30-sep-2011');
INSERT INTO CICLU_INVATAMANT
VALUES(3, 5, '11-sep-2002');
INSERT INTO CICLU_INVATAMANT
VALUES(5, 5, '19-sep-2010');
INSERT INTO CICLU_INVATAMANT
VALUES(4, 6, '20-may-2003');

INSERT INTO FAMILIE_CASA
VALUES(5, 16, 14, '10-may-1980');
INSERT INTO FAMILIE_CASA
VALUES(10, 11, 2, '10-april-1985');
INSERT INTO FAMILIE_CASA
VALUES(5, 21, 4, '9-april-1985');
INSERT INTO FAMILIE_CASA
VALUES(20, 21, 5, '29-aug-2003');
INSERT INTO FAMILIE_CASA
VALUES(15, 21, 4, '15-feb-1995');
INSERT INTO FAMILIE_CASA
VALUES(15, 1, 1,'20-jan-1997');
INSERT INTO FAMILIE_CASA
VALUES(10, 1, 1, '14-jan-2001');
INSERT INTO FAMILIE_CASA
VALUES(15, 11, 2, '10-june-2000'); 
INSERT INTO FAMILIE_CASA
VALUES(20, 21, 5, '19-jul-2005');
INSERT INTO FAMILIE_CASA
VALUES(20, 1, 1, '20-march-2002');
INSERT INTO FAMILIE_CASA
VALUES(10, 21, 4, '15-march-2002');
INSERT INTO FAMILIE_CASA
VALUES(25, 16, 14, '5-june-2001');
INSERT INTO FAMILIE_CASA
VALUES(30, 16, 25, '3-may-2001');


INSERT INTO CONTRACT_CUMPARARE
VALUES(1, 1, 5, '15-sep-1990', 15, 120000); 
INSERT INTO CONTRACT_CUMPARARE
VALUES(1, 2, 5, '20-jan-1985', 20, 17000);
INSERT INTO CONTRACT_CUMPARARE
VALUES(3, 1, 20, '15-aug-2019', 5, 7000);
INSERT INTO CONTRACT_CUMPARARE
VALUES(2, 5, 25,'14-sep-2023', 40, 800000);
INSERT INTO CONTRACT_CUMPARARE
VALUES(3, 4, 20, '19-jul-2021', 14, 75189); 
INSERT INTO CONTRACT_CUMPARARE
VALUES(2, 2, 25, '11-june-2021', 10, 10000);
INSERT INTO CONTRACT_CUMPARARE
VALUES(1, 1, 5, '15-sep-2004', 5, 6510);
INSERT INTO CONTRACT_CUMPARARE
VALUES(3, 2, 20, '14-sep-2022', 10, 19000);
INSERT INTO CONTRACT_CUMPARARE
VALUES(2, 1, 25, '19-oct-2022', 4, 7000);
INSERT INTO CONTRACT_CUMPARARE
VALUES(1, 3, 15, '18-nov-2022', 10, 19500);
INSERT INTO CONTRACT_CUMPARARE
VALUES(2, 3, 10, '20-aug-2001', NULL, 10000);

CREATE SEQUENCE id_prim
    START WITH 1
    INCREMENT BY 1
    MINVALUE 1
    MAXVALUE 5
    CYCLE
    NOCACHE;
INSERT INTO PRIMARIE_EVENIMENT
VALUES(id_prim.nextval, 1, '12-july-1998');
INSERT INTO PRIMARIE_EVENIMENT
VALUES(id_prim.nextval, 5, '6-november-2006');
INSERT INTO PRIMARIE_EVENIMENT
VALUES(id_prim.nextval, 3, '20-september-1993');
INSERT INTO PRIMARIE_EVENIMENT
VALUES(id_prim.nextval, 2, '3-may-2014');
INSERT INTO PRIMARIE_EVENIMENT
VALUES(id_prim.nextval, 1, '18-january-2002');
INSERT INTO PRIMARIE_EVENIMENT
VALUES(id_prim.nextval, 3, '9-october-2022');
INSERT INTO PRIMARIE_EVENIMENT
VALUES(id_prim.nextval, 5, '28-march-2022');
INSERT INTO PRIMARIE_EVENIMENT
VALUES(id_prim.nextval, 4, '14-june-2007');
INSERT INTO PRIMARIE_EVENIMENT
VALUES(id_prim.nextval, 2, '27-august-1992');
INSERT INTO PRIMARIE_EVENIMENT
VALUES(id_prim.nextval, 1, '01-may-2011');
INSERT INTO PRIMARIE_EVENIMENT
VALUES(id_prim.nextval, 2, '05-aug-2022');
INSERT INTO PRIMARIE_EVENIMENT
VALUES(id_prim.nextval, 3, '29-sep-2022');

---------------CERERI---------------
--1. Afisati numele institutiilor de invatamant a persoanelor din familia care a avut cel mai scump contract de vanzare,
--precum si luna in care au inceput studiul
WITH max_vanzare AS(  --bloc cerere cu with
    SELECT max(suma)
    FROM contract_cumparare)
SELECT f.nume_familie,  l.prenume,  DECODE(nvl(i.id_forma,0),0,'Nu a terminat o forma de invatamant',i.nume) AS "Nume institutie de Invatamant", to_char(c.an_invatamant, 'Month') luna_incepere --folosire functie pe data calendaristica + NVL si DECODE
FROM familie f JOIN locuitor l ON f.id_familie = l.id_familie FULL OUTER JOIN ciclu_invatamant c ON c.id_locuitor = l.id_locuitor
    FULL OUTER JOIN institutie_invatamant i ON i.id_forma = c.id_forma
WHERE f.id_familie = (SELECT id_familie
                    FROM contract_cumparare
                    WHERE suma = (SELECT * FROM max_vanzare));

--2. Gasiti casa la care locuieste familia care a facut cei mai multi bani din vanzari de pe o strada care are 
--prima litera din numele acestei familii drept nume
WITH max_vanzare_familie AS( --clausa with
    SELECT max(sum(suma)) --functie grup
    FROM contract_cumparare cc JOIN familie f ON cc.id_familie = f.id_familie --group by 
    GROUP BY cc.id_familie, f.nume_familie
    HAVING lower(f.nume_familie) = 'tupeiescu') --filtru la group by
SELECT f.id_familie, s.nume_strada, fc.numar, f.nume_familie
FROM familie f JOIN (SELECT id_familie FROM contract_cumparare GROUP BY id_familie HAVING sum(suma) = (SELECT * FROM max_vanzare_familie)) aux on aux.id_familie = f.id_familie --subcerere in FROM
    JOIN familie_casa fc ON fc.id_familie = f.id_familie JOIN strada s ON s.id_strada = fc.id_strada
WHERE fc.data_mutare = (SELECT max(data_mutare) --functie grup + subcerere nesincronizata cu cel putin 3 tabele
                        FROM familie_casa fc2 JOIN strada s ON fc2.id_strada = s.id_strada
                        WHERE fc2.id_familie = f.id_familie
                        AND s.id_strada 
                        IN (SELECT ss.id_strada FROM strada ss WHERE SUBSTR(lower(ss.nume_strada),1, 1) = SUBSTR(lower(f.nume_familie),1, 1)));

--3. Afisati numele(avand toate literele mari), prenumele(eliminand eventualele spatii), numarul de persoane din familie
--si un mesaj in functie de sumele contractelor de vanzare
-- pentru contractele trecut de anul 2000 si pentru familiile care au prefixul pop
WITH vanzari_familie_2000 AS(
    SELECT fam.nume_familie nume_familie, contr.suma suma, nr_loc_fam.nr_membrii
    FROM (SELECT * FROM familie WHERE trim(lower(nume_familie)) like ('pop%')) fam JOIN --2 functii pe siruri de caractere + subcereri nesincronizate in from
    (SELECT * FROM contract_cumparare WHERE to_char(data_cumparare, 'YYYY') >= 2000) contr --functie pe data calendaristica
    ON fam.id_familie = contr.id_familie
    LEFT OUTER JOIN(SELECT id_familie, count(*) nr_membrii FROM locuitor GROUP BY id_familie) nr_loc_fam -- grupare de date
    ON nr_loc_fam.id_familie = fam.id_familie
    )
SELECT trim(nume_familie), suma, DECODE(nvl(nr_membrii,0),0,'Nu au fost gasiti membrii', nr_membrii), --functie pe sir de caractere + NVL si DECODE
CASE 
    WHEN suma < 3000 THEN 'Suma mica'
    WHEN (suma >= 3000 AND suma <= 10000) THEN 'Suma medie'
    WHEN suma > 10000 AND suma < 30000 THEN 'Suma mare'  ---Utilizare CASE
    WHEN suma >= 30000 THEN 'Suma foarte mare'
    ELSE 'Alta suma'
END AS "Tip suma"
FROM vanzari_familie_2000;

--4.  Afisati cate evenimente culturale au avut loc in anul 2022 
--sunt luate in considerare doar cele care au capacitatea > minimul capacitatii din randul tuturor evenimentelor conduse de firma cu id 5
WITH an_eveniment AS(
        SELECT to_char(data_eveniment, 'YYYY') data_ev,  id_eveniment id_ev --functie pe data calendaristica
        FROM primarie_eveniment
        )
SELECT sum(aux.nr) "Totalul evenimentelor"
FROM (SELECT count(nume_eveniment) nr FROM an_eveniment ae JOIN (SELECT * FROM eveniment_cultural) ec ON ae.id_ev = ec.id_eveniment 
        GROUP BY data_ev, ec.nume_eveniment, ec.capacitate HAVING (data_ev) = '2022' --grupari de date, subcereri nesincronizate cu 3 tabele
        AND ec.capacitate > (SELECT MIN(capacitate) FROM eveniment_cultural GROUP BY id_firma HAVING id_firma = 5)) aux; --filtrare la nivel de grupuri + functie grup
        
--5. Afisati numele tuturor evenimentelor, impreuna cu capacitatea si primaria care le a organizat, in ordine descrescatoare
--in functie de capacitate. Se vor afisa si primariile care nu au organizat evenimente 
SELECT DECODE(nvl(ec.capacitate, 0), 0, 'Primaria nu a organizat niciun eveniment', ec.nume_eveniment), DECODE(nvl(ec.capacitate, 0), 0, 0, ec.capacitate), p.nume --decode + nvl
FROM eveniment_cultural ec JOIN primarie_eveniment pe ON ec.id_eveniment = pe.id_eveniment RIGHT OUTER JOIN primarie p ON p.id_primarie = pe.id_primarie 
ORDER BY 2 desc; --ordonari




