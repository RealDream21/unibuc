# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13BJNEOtMe6gNuvFB1yGSRT9QnJws-OjN
"""

import numpy as np
import matplotlib.pyplot as plt
from collections import Counter

#import

#invatam sa simulam ceva
#prima varianta (simulare discreta (nr finit si numarabil de obiecte din care extragem ceva))
obiecte = ["CAP", "PAJURA"]
probs = [1/2, .5]

def prima_mea_pacanea():
  return np.random.choice(obiecte, p=probs)

def PACANEAUAINATORUL(nr_iteratii=100):
  desen = []
  for i in range(nr_iteratii):
    obs = [pacanea2(0.9)  for _ in range(i)]
    nr_cap = Counter(obs)["CAP"] #dictionar cu chei si valori de cate ori apare valoare
    prob = (nr_cap + 1e-10)/(len(obs) + 1e-10)
    desen.append(prob)
  return desen

#a doua varianta
def pacanea2(p):
  x = np.random.uniform()
  if x < p:
    return "CAP"
  else:
    return "PAJURA"

desen = PACANEAUAINATORUL()
plt.plot(desen)

def barbut():
  zar = [1,2,3,4,5,6]
  return np.random.choice(zar)

def barbut2(nr_incercari = 10):
  return np.random.randint(low=1, high=7, size=(nr_incercari, 2))

barbut2()